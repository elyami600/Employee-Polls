{"ast":null,"code":"var _jsxFileName = \"/Users/yamilperez/Documents/React-NanoDegree/Employee-Polls/src/components/Question.js\";\nimport { connect } from \"react-redux\";\nimport { formatDate, formatQuestion } from \"../utils/helper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Questions = props => {\n  console.log(\"Questions props \", props);\n  const {\n    name,\n    avatar,\n    timestamp\n  } = props.question;\n  const toParent = (e, id) => {\n    e.preventDefault();\n    //navigate(`/tweet/${id}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: avatar,\n      alt: `${name}`,\n      className: \"avatar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: formatDate(timestamp)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"show-bnt\",\n        onClick: e => toParent(e, id),\n        children: \"show\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n_c = Questions;\nconst mapStateToProps = ({\n  authedUser,\n  users,\n  questions\n}, {\n  id\n}) => {\n  const question = questions[id];\n  return {\n    authedUser,\n    question: question ? formatQuestion(question, users[question.author], authedUser) : null\n  };\n};\nexport default connect(mapStateToProps)(Questions);\nvar _c;\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"names":["connect","formatDate","formatQuestion","jsxDEV","_jsxDEV","Questions","props","console","log","name","avatar","timestamp","question","toParent","e","id","preventDefault","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","mapStateToProps","authedUser","users","questions","author","$RefreshReg$"],"sources":["/Users/yamilperez/Documents/React-NanoDegree/Employee-Polls/src/components/Question.js"],"sourcesContent":["import { connect } from \"react-redux\"\nimport { formatDate, formatQuestion } from \"../utils/helper\"\n\n\nconst Questions = (props) => {\n    console.log(\"Questions props \", props)\n    const { name, avatar, timestamp } = props.question\n\n    const toParent = (e, id) => {\n        e.preventDefault();\n        //navigate(`/tweet/${id}`);\n        \n    }\n    return (\n        <div className=\"question\">\n            <img src={avatar} alt={`${name}`} className=\"avatar\" />\n            <div className=\"question-info\">\n                <div>\n                    <span>{name}</span>\n                    <div>{formatDate(timestamp)}</div>\n                </div>\n                <button className=\"show-bnt\" onClick={(e) => toParent(e,id)}>show</button>\n\n            </div>\n\n        </div>\n    )\n}\n\n\n\n\nconst mapStateToProps = ({authedUser, users, questions }, {id}) => {\n    const question = questions[id];\n\n    return{\n        authedUser,\n        question: question \n        ? formatQuestion(question, users[question.author], authedUser) \n        : null\n    }\n\n}\n\nexport default connect(mapStateToProps)(Questions);"],"mappings":";AAAA,SAASA,OAAO,QAAQ,aAAa;AACrC,SAASC,UAAU,EAAEC,cAAc,QAAQ,iBAAiB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAG5D,MAAMC,SAAS,GAAIC,KAAK,IAAK;EACzBC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,KAAK,CAAC;EACtC,MAAM;IAAEG,IAAI;IAAEC,MAAM;IAAEC;EAAU,CAAC,GAAGL,KAAK,CAACM,QAAQ;EAElD,MAAMC,QAAQ,GAAGA,CAACC,CAAC,EAAEC,EAAE,KAAK;IACxBD,CAAC,CAACE,cAAc,CAAC,CAAC;IAClB;EAEJ,CAAC;EACD,oBACIZ,OAAA;IAAKa,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACrBd,OAAA;MAAKe,GAAG,EAAET,MAAO;MAACU,GAAG,EAAE,GAAGX,IAAI,EAAG;MAACQ,SAAS,EAAC;IAAQ;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvDpB,OAAA;MAAKa,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC1Bd,OAAA;QAAAc,QAAA,gBACId,OAAA;UAAAc,QAAA,EAAOT;QAAI;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACnBpB,OAAA;UAAAc,QAAA,EAAMjB,UAAU,CAACU,SAAS;QAAC;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC,eACNpB,OAAA;QAAQa,SAAS,EAAC,UAAU;QAACQ,OAAO,EAAGX,CAAC,IAAKD,QAAQ,CAACC,CAAC,EAACC,EAAE,CAAE;QAAAG,QAAA,EAAC;MAAI;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEzE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAEd,CAAC;AAAAE,EAAA,GAvBKrB,SAAS;AA4Bf,MAAMsB,eAAe,GAAGA,CAAC;EAACC,UAAU;EAAEC,KAAK;EAAEC;AAAU,CAAC,EAAE;EAACf;AAAE,CAAC,KAAK;EAC/D,MAAMH,QAAQ,GAAGkB,SAAS,CAACf,EAAE,CAAC;EAE9B,OAAM;IACFa,UAAU;IACVhB,QAAQ,EAAEA,QAAQ,GAChBV,cAAc,CAACU,QAAQ,EAAEiB,KAAK,CAACjB,QAAQ,CAACmB,MAAM,CAAC,EAAEH,UAAU,CAAC,GAC5D;EACN,CAAC;AAEL,CAAC;AAED,eAAe5B,OAAO,CAAC2B,eAAe,CAAC,CAACtB,SAAS,CAAC;AAAC,IAAAqB,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}