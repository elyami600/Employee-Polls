{"ast":null,"code":"import { saveQuestion, saveQuestionAnswer } from \"../utils/api\";\nimport { addUserAnswer, addUserQuestion } from \"./users\";\nexport const RECEIVE_QUESTIONS = \"RECEIVE_QUESTIONS\";\nexport const ADD_QUESTION = \"ADD_QUESTION\";\nexport const ADD_QUESTION_ANSWER = \"ADD_QUESTION_ANSWER\";\nexport function receiveQuestions(questions) {\n  return {\n    type: RECEIVE_QUESTIONS,\n    questions\n  };\n}\nexport function addQuestion(question) {\n  return {\n    type: ADD_QUESTION,\n    question\n  };\n}\nexport function handleAddQuestion(optionOne, optionTwo) {\n  return (dispatch, getState) => {\n    const {\n      authedUser\n    } = getState();\n    const question = {\n      optionOne,\n      optionTwo,\n      authedUser\n    };\n    // dispatch(addQuestion(question));\n\n    return saveQuestion(question).then(question => {\n      dispatch(addQuestion(question));\n      dispatch(addUserQuestion({\n        qid: question.id,\n        author: question.author\n      }));\n    });\n  };\n}\nexport function addQuestionAnswer(authedUser, qid, answer) {\n  return {\n    type: ADD_QUESTION_ANSWER,\n    authedUser,\n    qid,\n    answer\n  };\n}\nexport function handleAddQuestionAnswer(qid, answer) {\n  return (dispatch, getState) => {\n    const {\n      authedUser\n    } = getState();\n    // dispatch(showLoading());\n\n    return saveQuestionAnswer({\n      authedUser,\n      qid,\n      answer\n    }).then(() => {\n      dispatch(addQuestionAnswer(authedUser, qid, answer));\n      dispatch(addUserAnswer(authedUser, qid, answer));\n    });\n    //.then(() => dispatch(hideLoading()));\n  };\n}","map":{"version":3,"names":["saveQuestion","saveQuestionAnswer","addUserAnswer","addUserQuestion","RECEIVE_QUESTIONS","ADD_QUESTION","ADD_QUESTION_ANSWER","receiveQuestions","questions","type","addQuestion","question","handleAddQuestion","optionOne","optionTwo","dispatch","getState","authedUser","then","qid","id","author","addQuestionAnswer","answer","handleAddQuestionAnswer"],"sources":["/Users/yamilperez/Documents/React-NanoDegree/Employee-Polls/src/actions/questions.js"],"sourcesContent":["import { saveQuestion, saveQuestionAnswer } from \"../utils/api\";\nimport { addUserAnswer, addUserQuestion } from \"./users\";\n\nexport const RECEIVE_QUESTIONS = \"RECEIVE_QUESTIONS\"\nexport const ADD_QUESTION      = \"ADD_QUESTION\"\nexport const ADD_QUESTION_ANSWER = \"ADD_QUESTION_ANSWER\"\n\nexport function receiveQuestions(questions) {\n    return {\n      type: RECEIVE_QUESTIONS,\n      questions,\n    };\n  }\n\nexport function addQuestion(question) {\n  return {\n    type: ADD_QUESTION,\n    question,\n  }\n\n}\n\nexport function handleAddQuestion(optionOne, optionTwo) {\n  return (dispatch, getState) => {\n\n    const { authedUser } = getState();\n    const question = { \n      optionOne,\n       optionTwo, \n       authedUser \n      }\n   // dispatch(addQuestion(question));\n  \n    return saveQuestion(question)\n    .then((question) => {\n      dispatch(addQuestion(question));\n      dispatch(addUserQuestion({ \n        qid : question.id,\n         author: question.author}))\n    })\n  }\n\n}\n\nexport function addQuestionAnswer(authedUser, qid, answer) {\n  return {\n    type: ADD_QUESTION_ANSWER,\n    authedUser,\n    qid, \n    answer\n  }\n}\n\nexport function handleAddQuestionAnswer(qid, answer) {\n  return (dispatch, getState) => {\n    const { authedUser } = getState();\n    // dispatch(showLoading());\n\n    return saveQuestionAnswer({ authedUser, qid, answer })\n    .then(() => {\n      dispatch(addQuestionAnswer(authedUser, qid, answer))\n      dispatch(addUserAnswer(authedUser, qid, answer))\n    })\n      //.then(() => dispatch(hideLoading()));\n  }\n\n}"],"mappings":"AAAA,SAASA,YAAY,EAAEC,kBAAkB,QAAQ,cAAc;AAC/D,SAASC,aAAa,EAAEC,eAAe,QAAQ,SAAS;AAExD,OAAO,MAAMC,iBAAiB,GAAG,mBAAmB;AACpD,OAAO,MAAMC,YAAY,GAAQ,cAAc;AAC/C,OAAO,MAAMC,mBAAmB,GAAG,qBAAqB;AAExD,OAAO,SAASC,gBAAgBA,CAACC,SAAS,EAAE;EACxC,OAAO;IACLC,IAAI,EAAEL,iBAAiB;IACvBI;EACF,CAAC;AACH;AAEF,OAAO,SAASE,WAAWA,CAACC,QAAQ,EAAE;EACpC,OAAO;IACLF,IAAI,EAAEJ,YAAY;IAClBM;EACF,CAAC;AAEH;AAEA,OAAO,SAASC,iBAAiBA,CAACC,SAAS,EAAEC,SAAS,EAAE;EACtD,OAAO,CAACC,QAAQ,EAAEC,QAAQ,KAAK;IAE7B,MAAM;MAAEC;IAAW,CAAC,GAAGD,QAAQ,CAAC,CAAC;IACjC,MAAML,QAAQ,GAAG;MACfE,SAAS;MACRC,SAAS;MACTG;IACD,CAAC;IACJ;;IAEC,OAAOjB,YAAY,CAACW,QAAQ,CAAC,CAC5BO,IAAI,CAAEP,QAAQ,IAAK;MAClBI,QAAQ,CAACL,WAAW,CAACC,QAAQ,CAAC,CAAC;MAC/BI,QAAQ,CAACZ,eAAe,CAAC;QACvBgB,GAAG,EAAGR,QAAQ,CAACS,EAAE;QAChBC,MAAM,EAAEV,QAAQ,CAACU;MAAM,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC;EACJ,CAAC;AAEH;AAEA,OAAO,SAASC,iBAAiBA,CAACL,UAAU,EAAEE,GAAG,EAAEI,MAAM,EAAE;EACzD,OAAO;IACLd,IAAI,EAAEH,mBAAmB;IACzBW,UAAU;IACVE,GAAG;IACHI;EACF,CAAC;AACH;AAEA,OAAO,SAASC,uBAAuBA,CAACL,GAAG,EAAEI,MAAM,EAAE;EACnD,OAAO,CAACR,QAAQ,EAAEC,QAAQ,KAAK;IAC7B,MAAM;MAAEC;IAAW,CAAC,GAAGD,QAAQ,CAAC,CAAC;IACjC;;IAEA,OAAOf,kBAAkB,CAAC;MAAEgB,UAAU;MAAEE,GAAG;MAAEI;IAAO,CAAC,CAAC,CACrDL,IAAI,CAAC,MAAM;MACVH,QAAQ,CAACO,iBAAiB,CAACL,UAAU,EAAEE,GAAG,EAAEI,MAAM,CAAC,CAAC;MACpDR,QAAQ,CAACb,aAAa,CAACe,UAAU,EAAEE,GAAG,EAAEI,MAAM,CAAC,CAAC;IAClD,CAAC,CAAC;IACA;EACJ,CAAC;AAEH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}