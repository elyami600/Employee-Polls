{"ast":null,"code":"var _jsxFileName = \"/Users/yamilperez/Documents/React-NanoDegree/Employee-Polls/src/components/Question.js\";\nimport { connect } from \"react-redux\";\nimport { formatDate, formatQuestion } from \"../utils/helper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Questions = props => {\n  console.log(\"Questions props \", props);\n  const {\n    name,\n    avatar,\n    timestamp\n  } = props.question;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: avatar,\n      alt: `${name}`,\n      className: \"avatar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: formatDate(timestamp)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button-14\",\n        children: \"show\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n_c = Questions;\nconst mapStateToProps = ({\n  authedUser,\n  users,\n  questions\n}, {\n  id\n}) => {\n  const question = questions[id];\n  return {\n    authedUser,\n    question: question ? formatQuestion(question, users[question.author], authedUser) : null\n  };\n};\nexport default connect(mapStateToProps)(Questions);\nvar _c;\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"names":["connect","formatDate","formatQuestion","jsxDEV","_jsxDEV","Questions","props","console","log","name","avatar","timestamp","question","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","mapStateToProps","authedUser","users","questions","id","author","$RefreshReg$"],"sources":["/Users/yamilperez/Documents/React-NanoDegree/Employee-Polls/src/components/Question.js"],"sourcesContent":["import { connect } from \"react-redux\"\nimport { formatDate, formatQuestion } from \"../utils/helper\"\n\n\nconst Questions = (props) => {\n    console.log(\"Questions props \", props)\n    const { name, avatar, timestamp } = props.question\n    return (\n        <div className=\"question\">\n            <img src={avatar} alt={`${name}`} className=\"avatar\" />\n            <div className=\"question-info\">\n                <div>\n                    <span>{name}</span>\n                    <div>{formatDate(timestamp)}</div>\n                </div>\n                <button className=\"button-14\">show</button>\n\n            </div>\n\n        </div>\n    )\n}\n\n\n\n\nconst mapStateToProps = ({authedUser, users, questions }, {id}) => {\n    const question = questions[id];\n\n    return{\n        authedUser,\n        question: question \n        ? formatQuestion(question, users[question.author], authedUser) \n        : null\n    }\n\n}\n\nexport default connect(mapStateToProps)(Questions);"],"mappings":";AAAA,SAASA,OAAO,QAAQ,aAAa;AACrC,SAASC,UAAU,EAAEC,cAAc,QAAQ,iBAAiB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAG5D,MAAMC,SAAS,GAAIC,KAAK,IAAK;EACzBC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,KAAK,CAAC;EACtC,MAAM;IAAEG,IAAI;IAAEC,MAAM;IAAEC;EAAU,CAAC,GAAGL,KAAK,CAACM,QAAQ;EAClD,oBACIR,OAAA;IAAKS,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACrBV,OAAA;MAAKW,GAAG,EAAEL,MAAO;MAACM,GAAG,EAAE,GAAGP,IAAI,EAAG;MAACI,SAAS,EAAC;IAAQ;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvDhB,OAAA;MAAKS,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC1BV,OAAA;QAAAU,QAAA,gBACIV,OAAA;UAAAU,QAAA,EAAOL;QAAI;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACnBhB,OAAA;UAAAU,QAAA,EAAMb,UAAU,CAACU,SAAS;QAAC;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC,eACNhB,OAAA;QAAQS,SAAS,EAAC,WAAW;QAAAC,QAAA,EAAC;MAAI;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE1C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAEd,CAAC;AAAAC,EAAA,GAjBKhB,SAAS;AAsBf,MAAMiB,eAAe,GAAGA,CAAC;EAACC,UAAU;EAAEC,KAAK;EAAEC;AAAU,CAAC,EAAE;EAACC;AAAE,CAAC,KAAK;EAC/D,MAAMd,QAAQ,GAAGa,SAAS,CAACC,EAAE,CAAC;EAE9B,OAAM;IACFH,UAAU;IACVX,QAAQ,EAAEA,QAAQ,GAChBV,cAAc,CAACU,QAAQ,EAAEY,KAAK,CAACZ,QAAQ,CAACe,MAAM,CAAC,EAAEJ,UAAU,CAAC,GAC5D;EACN,CAAC;AAEL,CAAC;AAED,eAAevB,OAAO,CAACsB,eAAe,CAAC,CAACjB,SAAS,CAAC;AAAC,IAAAgB,EAAA;AAAAO,YAAA,CAAAP,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}