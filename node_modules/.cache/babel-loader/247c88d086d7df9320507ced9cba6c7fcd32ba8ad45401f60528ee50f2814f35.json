{"ast":null,"code":"var _jsxFileName = \"/Users/yamilperez/Documents/React-NanoDegree/Employee-Polls/src/components/Dashboard.js\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = props => {\n  console.log(\"Dashboard props \", props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"center\",\n      children: \"New Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"dashboard-list\",\n      children: props.questionsIds.map(id => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Questions ID : \", id]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 7\n  }, this);\n};\n_c = Dashboard;\nconst mapStateToProps = ({\n  questions\n}) => ({\n  questionsIds: Object.keys(questions).sort((a, b) => questions[b].timestamp - questions[a].timestamp)\n});\nexport default connect(mapStateToProps)(Dashboard);\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["connect","jsxDEV","_jsxDEV","Dashboard","props","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","questionsIds","map","id","_c","mapStateToProps","questions","Object","keys","sort","a","b","timestamp","$RefreshReg$"],"sources":["/Users/yamilperez/Documents/React-NanoDegree/Employee-Polls/src/components/Dashboard.js"],"sourcesContent":["import { connect } from \"react-redux\";\n\nconst Dashboard = (props) => {\n    console.log(\"Dashboard props \", props)\n    return (\n      <div>\n        <h3 className=\"center\">New Questions</h3>\n        <ul className=\"dashboard-list\">\n            {props.questionsIds.map((id) =>(\n                <li key={id}>Questions ID : {id}</li>\n            ))}\n        </ul>\n      </div>\n    )\n}\n\nconst mapStateToProps = ({ questions }) => ({\n    questionsIds: Object.keys(questions).sort(\n      (a, b) => questions[b].timestamp - questions[a].timestamp\n    ),\n  });\nexport default connect(mapStateToProps)(Dashboard);"],"mappings":";AAAA,SAASA,OAAO,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,SAAS,GAAIC,KAAK,IAAK;EACzBC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,KAAK,CAAC;EACtC,oBACEF,OAAA;IAAAK,QAAA,gBACEL,OAAA;MAAIM,SAAS,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzCV,OAAA;MAAIM,SAAS,EAAC,gBAAgB;MAAAD,QAAA,EACzBH,KAAK,CAACS,YAAY,CAACC,GAAG,CAAEC,EAAE,iBACvBb,OAAA;QAAAK,QAAA,GAAa,iBAAe,EAACQ,EAAE;MAAA,GAAtBA,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAyB,CACvC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEZ,CAAC;AAAAI,EAAA,GAZKb,SAAS;AAcf,MAAMc,eAAe,GAAGA,CAAC;EAAEC;AAAU,CAAC,MAAM;EACxCL,YAAY,EAAEM,MAAM,CAACC,IAAI,CAACF,SAAS,CAAC,CAACG,IAAI,CACvC,CAACC,CAAC,EAAEC,CAAC,KAAKL,SAAS,CAACK,CAAC,CAAC,CAACC,SAAS,GAAGN,SAAS,CAACI,CAAC,CAAC,CAACE,SAClD;AACF,CAAC,CAAC;AACJ,eAAexB,OAAO,CAACiB,eAAe,CAAC,CAACd,SAAS,CAAC;AAAC,IAAAa,EAAA;AAAAS,YAAA,CAAAT,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}