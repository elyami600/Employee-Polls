{"ast":null,"code":"var _jsxFileName = \"/Users/yamilperez/Documents/React-NanoDegree/Employee-Polls/src/components/PrivateRoute.js\",\n  _s = $RefreshSig$();\nimport { connect } from 'react-redux';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  authedUser,\n  children\n}) => {\n  _s();\n  const location = useLocation();\n  if (!authedUser) {\n    // Save the attempted URL for post-login redirect\n    localStorage.setItem('lastVisitedURL', location.pathname);\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true,\n      state: {\n        path: location.pathname\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this);\n  }\n  return children;\n};\n_s(PrivateRoute, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = PrivateRoute;\nconst mapStateToProps = ({\n  authedUser\n}) => ({\n  authedUser\n});\nexport default connect(mapStateToProps)(PrivateRoute);\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["connect","Navigate","useLocation","jsxDEV","_jsxDEV","PrivateRoute","authedUser","children","_s","location","localStorage","setItem","pathname","to","replace","state","path","fileName","_jsxFileName","lineNumber","columnNumber","_c","mapStateToProps","$RefreshReg$"],"sources":["/Users/yamilperez/Documents/React-NanoDegree/Employee-Polls/src/components/PrivateRoute.js"],"sourcesContent":["import { connect } from 'react-redux';\nimport { Navigate, useLocation } from 'react-router-dom';\n\nconst PrivateRoute = ({ authedUser, children }) => {\n  const location = useLocation();\n  \n  if (!authedUser) {\n    // Save the attempted URL for post-login redirect\n    localStorage.setItem('lastVisitedURL', location.pathname);\n    return <Navigate to=\"/login\" replace state={{ path: location.pathname }} />;\n  }\n  \n  return children;\n};\n\nconst mapStateToProps = ({ authedUser }) => ({\n  authedUser,\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n"],"mappings":";;AAAA,SAASA,OAAO,QAAQ,aAAa;AACrC,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,YAAY,GAAGA,CAAC;EAAEC,UAAU;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACjD,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,IAAI,CAACI,UAAU,EAAE;IACf;IACAI,YAAY,CAACC,OAAO,CAAC,gBAAgB,EAAEF,QAAQ,CAACG,QAAQ,CAAC;IACzD,oBAAOR,OAAA,CAACH,QAAQ;MAACY,EAAE,EAAC,QAAQ;MAACC,OAAO;MAACC,KAAK,EAAE;QAAEC,IAAI,EAAEP,QAAQ,CAACG;MAAS;IAAE;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC7E;EAEA,OAAOb,QAAQ;AACjB,CAAC;AAACC,EAAA,CAVIH,YAAY;EAAA,QACCH,WAAW;AAAA;AAAAmB,EAAA,GADxBhB,YAAY;AAYlB,MAAMiB,eAAe,GAAGA,CAAC;EAAEhB;AAAW,CAAC,MAAM;EAC3CA;AACF,CAAC,CAAC;AAEF,eAAeN,OAAO,CAACsB,eAAe,CAAC,CAACjB,YAAY,CAAC;AAAC,IAAAgB,EAAA;AAAAE,YAAA,CAAAF,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}