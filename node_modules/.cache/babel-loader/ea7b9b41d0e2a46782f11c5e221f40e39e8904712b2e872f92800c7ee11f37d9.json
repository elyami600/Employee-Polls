{"ast":null,"code":"var _jsxFileName = \"/Users/yamilperez/Documents/React-NanoDegree/Employee-Polls/src/components/Dashboard.js\";\nimport { connect } from \"react-redux\";\nimport Question from \"./Question\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  questions,\n  questionsIds,\n  authedUser\n}) => {\n  const voteOptioneOne = questions.optionOne.votes.includes(authedUser);\n  const voteOptioneTwo = questions.optionTwo.votes.includes(authedUser);\n  const hasVoted = voteOptioneOne || voteOptioneTwo;\n  //console.log(\"Dashboard props \", props)\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-grid\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"center\",\n      children: \"New Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"dashboard-list\",\n      children: hasVoted && questionsIds.map(id => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Question, {\n          id: id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 19\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 7\n  }, this);\n};\n_c = Dashboard;\nconst mapStateToProps = ({\n  questions,\n  authedUser\n}) => ({\n  questionsIds: Object.keys(questions).sort((a, b) => questions[b].timestamp - questions[a].timestamp),\n  questions,\n  authedUser\n});\nexport default connect(mapStateToProps)(Dashboard);\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["connect","Question","jsxDEV","_jsxDEV","Dashboard","questions","questionsIds","authedUser","voteOptioneOne","optionOne","votes","includes","voteOptioneTwo","optionTwo","hasVoted","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","id","_c","mapStateToProps","Object","keys","sort","a","b","timestamp","$RefreshReg$"],"sources":["/Users/yamilperez/Documents/React-NanoDegree/Employee-Polls/src/components/Dashboard.js"],"sourcesContent":["import { connect } from \"react-redux\";\nimport Question from \"./Question\";\n\nconst Dashboard = ({questions, questionsIds, authedUser}) => {\n  const voteOptioneOne = questions.optionOne.votes.includes(authedUser)\n  const voteOptioneTwo = questions.optionTwo.votes.includes(authedUser)\n  const hasVoted = voteOptioneOne || voteOptioneTwo;\n    //console.log(\"Dashboard props \", props)\n    return (\n      <div className=\"card-grid\">\n        <h3 className=\"center\">New Questions</h3>\n        <ul className=\"dashboard-list\">\n            {hasVoted && questionsIds.map((id) =>(\n                <li key={id}>\n                  <Question id={id}/>\n                </li>\n            ))}\n        </ul>\n      </div>\n    )\n}\n\nconst mapStateToProps = ({ questions, authedUser}) => ({\n\n    questionsIds: Object.keys(questions).sort(\n      (a, b) => questions[b].timestamp - questions[a].timestamp\n    ),\n    questions,\n    authedUser,\n  \n  });\nexport default connect(mapStateToProps)(Dashboard);"],"mappings":";AAAA,SAASA,OAAO,QAAQ,aAAa;AACrC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,SAAS,GAAGA,CAAC;EAACC,SAAS;EAAEC,YAAY;EAAEC;AAAU,CAAC,KAAK;EAC3D,MAAMC,cAAc,GAAGH,SAAS,CAACI,SAAS,CAACC,KAAK,CAACC,QAAQ,CAACJ,UAAU,CAAC;EACrE,MAAMK,cAAc,GAAGP,SAAS,CAACQ,SAAS,CAACH,KAAK,CAACC,QAAQ,CAACJ,UAAU,CAAC;EACrE,MAAMO,QAAQ,GAAGN,cAAc,IAAII,cAAc;EAC/C;EACA,oBACET,OAAA;IAAKY,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBb,OAAA;MAAIY,SAAS,EAAC,QAAQ;MAAAC,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzCjB,OAAA;MAAIY,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EACzBF,QAAQ,IAAIR,YAAY,CAACe,GAAG,CAAEC,EAAE,iBAC7BnB,OAAA;QAAAa,QAAA,eACEb,OAAA,CAACF,QAAQ;UAACqB,EAAE,EAAEA;QAAG;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC,GADZE,EAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEP,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEZ,CAAC;AAAAG,EAAA,GAjBKnB,SAAS;AAmBf,MAAMoB,eAAe,GAAGA,CAAC;EAAEnB,SAAS;EAAEE;AAAU,CAAC,MAAM;EAEnDD,YAAY,EAAEmB,MAAM,CAACC,IAAI,CAACrB,SAAS,CAAC,CAACsB,IAAI,CACvC,CAACC,CAAC,EAAEC,CAAC,KAAKxB,SAAS,CAACwB,CAAC,CAAC,CAACC,SAAS,GAAGzB,SAAS,CAACuB,CAAC,CAAC,CAACE,SAClD,CAAC;EACDzB,SAAS;EACTE;AAEF,CAAC,CAAC;AACJ,eAAeP,OAAO,CAACwB,eAAe,CAAC,CAACpB,SAAS,CAAC;AAAC,IAAAmB,EAAA;AAAAQ,YAAA,CAAAR,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}