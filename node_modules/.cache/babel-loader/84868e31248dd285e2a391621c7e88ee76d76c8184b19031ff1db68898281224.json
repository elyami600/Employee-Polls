{"ast":null,"code":"var _jsxFileName = \"/Users/yamilperez/Documents/React-NanoDegree/Employee-Polls/src/components/Dashboard.js\";\nimport { connect } from \"react-redux\";\nimport Question from \"./Question\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst withRouter = Component => {\n  var _s = $RefreshSig$();\n  const ComponentWithRouterProp = props => {\n    _s();\n    let location = useLocation();\n    let navigate = useNavigate();\n    let params = useParams();\n    return /*#__PURE__*/_jsxDEV(Component, {\n      ...props,\n      router: {\n        location,\n        navigate,\n        params\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  };\n  _s(ComponentWithRouterProp, \"G4H0N746j5KwtpeOKQjfXhEbWfg=\", false, function () {\n    return [useLocation, useNavigate, useParams];\n  });\n  return ComponentWithRouterProp;\n};\nconst Dashboard = ({\n  questions,\n  questionsIds,\n  authedUser\n}) => {\n  console.log(\"========> \", questions);\n  // const voteOptioneOne = questions[questionsIds].optionOne.votes.includes(authedUser)\n  // const voteOptioneTwo = questions[questionsIds].optionTwo.votes.includes(authedUser)\n  // const hasVoted = voteOptioneOne || voteOptioneTwo;\n  //console.log(\"Dashboard props \", props)\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-grid\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"center\",\n      children: \"New Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"dashboard-list\",\n      children: questionsIds.map(id => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Question, {\n          id: id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 19\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 7\n  }, this);\n};\n_c = Dashboard;\nconst mapStateToProps = ({\n  questions,\n  authedUser\n}, props) => {\n  const {\n    id\n  } = props.router.params;\n  return {\n    questionsIds: Object.keys(questions).sort((a, b) => questions[b].timestamp - questions[a].timestamp),\n    questions,\n    authedUser,\n    id\n  };\n};\nexport default withRouter(connect(mapStateToProps)(Dashboard));\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["connect","Question","useLocation","useNavigate","useParams","jsxDEV","_jsxDEV","withRouter","Component","_s","$RefreshSig$","ComponentWithRouterProp","props","location","navigate","params","router","fileName","_jsxFileName","lineNumber","columnNumber","Dashboard","questions","questionsIds","authedUser","console","log","className","children","map","id","_c","mapStateToProps","Object","keys","sort","a","b","timestamp","$RefreshReg$"],"sources":["/Users/yamilperez/Documents/React-NanoDegree/Employee-Polls/src/components/Dashboard.js"],"sourcesContent":["import { connect } from \"react-redux\";\nimport Question from \"./Question\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\n\n\nconst withRouter = (Component) => {\n  const ComponentWithRouterProp = (props) => {\n    let location = useLocation();\n    let navigate = useNavigate();\n    let params = useParams();\n    return <Component {...props} router={{ location, navigate, params }} />;\n  };\n\n  return ComponentWithRouterProp;\n};\n\nconst Dashboard = ({questions, questionsIds, authedUser}) => {\n  console.log(\"========> \" , questions)\n  // const voteOptioneOne = questions[questionsIds].optionOne.votes.includes(authedUser)\n  // const voteOptioneTwo = questions[questionsIds].optionTwo.votes.includes(authedUser)\n  // const hasVoted = voteOptioneOne || voteOptioneTwo;\n    //console.log(\"Dashboard props \", props)\n    return (\n      <div className=\"card-grid\">\n        <h3 className=\"center\">New Questions</h3>\n        <ul className=\"dashboard-list\">\n            {questionsIds.map((id) =>(\n                <li key={id}>\n                  <Question id={id}/>\n                </li>\n            ))}\n        </ul>\n      </div>\n    )\n}\n\nconst mapStateToProps = ({ questions, authedUser}, props) => {\n  const { id }= props.router.params;\nreturn {\n    questionsIds: Object.keys(questions).sort(\n      (a, b) => questions[b].timestamp - questions[a].timestamp\n    ),\n    questions,\n    authedUser,\n    id\n  }\n};\nexport default withRouter(connect(mapStateToProps)(Dashboard));"],"mappings":";AAAA,SAASA,OAAO,QAAQ,aAAa;AACrC,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,WAAW,EAAEC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGvE,MAAMC,UAAU,GAAIC,SAAS,IAAK;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAChC,MAAMC,uBAAuB,GAAIC,KAAK,IAAK;IAAAH,EAAA;IACzC,IAAII,QAAQ,GAAGX,WAAW,CAAC,CAAC;IAC5B,IAAIY,QAAQ,GAAGX,WAAW,CAAC,CAAC;IAC5B,IAAIY,MAAM,GAAGX,SAAS,CAAC,CAAC;IACxB,oBAAOE,OAAA,CAACE,SAAS;MAAA,GAAKI,KAAK;MAAEI,MAAM,EAAE;QAAEH,QAAQ;QAAEC,QAAQ;QAAEC;MAAO;IAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzE,CAAC;EAACX,EAAA,CALIE,uBAAuB;IAAA,QACZT,WAAW,EACXC,WAAW,EACbC,SAAS;EAAA;EAIxB,OAAOO,uBAAuB;AAChC,CAAC;AAED,MAAMU,SAAS,GAAGA,CAAC;EAACC,SAAS;EAAEC,YAAY;EAAEC;AAAU,CAAC,KAAK;EAC3DC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAGJ,SAAS,CAAC;EACrC;EACA;EACA;EACE;EACA,oBACEhB,OAAA;IAAKqB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBtB,OAAA;MAAIqB,SAAS,EAAC,QAAQ;MAAAC,QAAA,EAAC;IAAa;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzCd,OAAA;MAAIqB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EACzBL,YAAY,CAACM,GAAG,CAAEC,EAAE,iBACjBxB,OAAA;QAAAsB,QAAA,eACEtB,OAAA,CAACL,QAAQ;UAAC6B,EAAE,EAAEA;QAAG;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC,GADZU,EAAE;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEP,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEZ,CAAC;AAAAW,EAAA,GAlBKV,SAAS;AAoBf,MAAMW,eAAe,GAAGA,CAAC;EAAEV,SAAS;EAAEE;AAAU,CAAC,EAAEZ,KAAK,KAAK;EAC3D,MAAM;IAAEkB;EAAG,CAAC,GAAElB,KAAK,CAACI,MAAM,CAACD,MAAM;EACnC,OAAO;IACHQ,YAAY,EAAEU,MAAM,CAACC,IAAI,CAACZ,SAAS,CAAC,CAACa,IAAI,CACvC,CAACC,CAAC,EAAEC,CAAC,KAAKf,SAAS,CAACe,CAAC,CAAC,CAACC,SAAS,GAAGhB,SAAS,CAACc,CAAC,CAAC,CAACE,SAClD,CAAC;IACDhB,SAAS;IACTE,UAAU;IACVM;EACF,CAAC;AACH,CAAC;AACD,eAAevB,UAAU,CAACP,OAAO,CAACgC,eAAe,CAAC,CAACX,SAAS,CAAC,CAAC;AAAC,IAAAU,EAAA;AAAAQ,YAAA,CAAAR,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}