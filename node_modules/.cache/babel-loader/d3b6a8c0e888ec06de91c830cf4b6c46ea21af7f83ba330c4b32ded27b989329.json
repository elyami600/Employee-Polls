{"ast":null,"code":"var _jsxFileName = \"/Users/yamilperez/Documents/React-NanoDegree/Employee-Polls/src/components/PollAnswer.js\";\nimport { connect } from \"react-redux\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { handleAddQuestionAnswer } from \"../actions/questions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst withRouter = Component => {\n  var _s = $RefreshSig$();\n  const ComponentWithRouterProp = props => {\n    _s();\n    let location = useLocation();\n    let navigate = useNavigate();\n    let params = useParams();\n    return /*#__PURE__*/_jsxDEV(Component, {\n      ...props,\n      router: {\n        location,\n        navigate,\n        params\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 14\n    }, this);\n  };\n  _s(ComponentWithRouterProp, \"G4H0N746j5KwtpeOKQjfXhEbWfg=\", false, function () {\n    return [useLocation, useNavigate, useParams];\n  });\n  return ComponentWithRouterProp;\n};\nconst PollAnswer = props => {\n  console.log(\"Poll answer \", props);\n  //const { name, avatar, optionOneText , optionTwoText } = props\n  const {\n    dispatch,\n    id,\n    users,\n    questions\n  } = props;\n  const question = questions[id];\n  const avatar = users[question.author].avatarURL;\n  const name = users[question.author].name;\n  const handleOptioneOne = () => {\n    console.log(\"handleOptioneOne\");\n    dispatch(handleAddQuestionAnswer(\"optionOne\"));\n  };\n  const handleOptioneTwo = () => {\n    console.log(\"handleOptioneTwo\");\n    dispatch(handleAddQuestionAnswer(optionTwo));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" Poll by \", name, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: avatar,\n      alt: `Avar of ${name}`,\n      className: \"avatar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Would You Rather \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [question.optionOne.text, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleOptioneOne,\n          children: \"Click\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [question.optionTwo.text, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleOptioneTwo,\n          children: \"Click\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_c = PollAnswer;\nconst mapStateToProps = ({\n  authedUser,\n  users,\n  questions\n}, props) => {\n  const {\n    id\n  } = props.router.params;\n\n  // const name  = users[questions[id].author].name\n  // const avatar = users[questions[id].author].avatarURL\n  // const optionOneText = questions[id].optionOne.text\n  // const optionTwoText = questions[id].optionTwo.text\n\n  return {\n    id,\n    users,\n    questions,\n    authedUser\n  };\n};\nexport default withRouter(connect(mapStateToProps)(PollAnswer));\nvar _c;\n$RefreshReg$(_c, \"PollAnswer\");","map":{"version":3,"names":["connect","useLocation","useNavigate","useParams","handleAddQuestionAnswer","jsxDEV","_jsxDEV","withRouter","Component","_s","$RefreshSig$","ComponentWithRouterProp","props","location","navigate","params","router","fileName","_jsxFileName","lineNumber","columnNumber","PollAnswer","console","log","dispatch","id","users","questions","question","avatar","author","avatarURL","name","handleOptioneOne","handleOptioneTwo","optionTwo","className","children","src","alt","optionOne","text","onClick","_c","mapStateToProps","authedUser","$RefreshReg$"],"sources":["/Users/yamilperez/Documents/React-NanoDegree/Employee-Polls/src/components/PollAnswer.js"],"sourcesContent":["\nimport { connect } from \"react-redux\"\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { handleAddQuestionAnswer } from \"../actions/questions\";\n\n\nconst withRouter = (Component) => {\n    const ComponentWithRouterProp = (props) => {\n      let location = useLocation();\n      let navigate = useNavigate();\n      let params = useParams();\n      return <Component {...props} router={{ location, navigate, params }} />;\n    };\n  \n    return ComponentWithRouterProp;\n  };\n\n\nconst PollAnswer = (props) => {\n  console.log(\"Poll answer \", props)\n//const { name, avatar, optionOneText , optionTwoText } = props\n  const { dispatch, id, users, questions } = props;\n  const question = questions[id];\n  const avatar = users[question.author].avatarURL\n  const name  = users[question.author].name\n\n  const handleOptioneOne = () => {\n    console.log(\"handleOptioneOne\")\n    dispatch(handleAddQuestionAnswer(\"optionOne\"))\n  \n   \n\n  }\n  const handleOptioneTwo = () => {\n    console.log(\"handleOptioneTwo\")\n    dispatch(handleAddQuestionAnswer(optionTwo))\n \n  }\n\n  return (\n    <div className=\"center\">\n      <h1> Poll by {name} </h1>\n      <img src={avatar} alt={`Avar of ${name}`} className=\"avatar\" />\n      <div>\n        <h1>Would You Rather </h1>\n          <div>\n            <h3>{question.optionOne.text} </h3>\n            <button onClick={handleOptioneOne}>Click</button>   \n          </div>\n          <div>\n            <h3>{question.optionTwo.text} </h3>\n            <button onClick={handleOptioneTwo}>Click</button>   \n          </div>\n      </div>\n</div>\n  )\n}\n\nconst mapStateToProps = ({ authedUser, users, questions,}, props) => {\n  const { id }= props.router.params;\n \n  // const name  = users[questions[id].author].name\n  // const avatar = users[questions[id].author].avatarURL\n  // const optionOneText = questions[id].optionOne.text\n  // const optionTwoText = questions[id].optionTwo.text\n\n  return {\n    id,\n    users,\n    questions,\n    authedUser\n  }\n}\n\nexport default withRouter(connect(mapStateToProps)(PollAnswer))"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}