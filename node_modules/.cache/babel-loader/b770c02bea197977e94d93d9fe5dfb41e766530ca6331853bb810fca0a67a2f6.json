{"ast":null,"code":"var _jsxFileName = \"/Users/yamilperez/Documents/React-NanoDegree/Employee-Polls/src/components/Dashboard.js\";\nimport { connect } from \"react-redux\";\nimport Question from \"./Question\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  questions,\n  questionsIds,\n  authedUser,\n  users\n}) => {\n  console.log(\"========> \", questions);\n  console.log(\"========> \", users);\n  // const voteOptioneOne = questions[questionsIds].optionOne.votes.includes(authedUser)\n  // const voteOptioneTwo = questions[questionsIds].optionTwo.votes.includes(authedUser)\n  // const hasVoted = voteOptioneOne || voteOptioneTwo;\n  //console.log(\"Dashboard props \", props)\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-grid\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"center\",\n      children: \"New Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"dashboard-list\",\n      children: questionsIds.map(id => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Question, {\n          id: id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 19\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 7\n  }, this);\n};\n_c = Dashboard;\nconst mapStateToProps = ({\n  users,\n  questions,\n  authedUser\n}) => ({\n  questionsIds: Object.keys(questions).sort((a, b) => questions[b].timestamp - questions[a].timestamp),\n  questions,\n  authedUser,\n  users\n});\nexport default connect(mapStateToProps)(Dashboard);\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["connect","Question","jsxDEV","_jsxDEV","Dashboard","questions","questionsIds","authedUser","users","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","id","_c","mapStateToProps","Object","keys","sort","a","b","timestamp","$RefreshReg$"],"sources":["/Users/yamilperez/Documents/React-NanoDegree/Employee-Polls/src/components/Dashboard.js"],"sourcesContent":["import { connect } from \"react-redux\";\nimport Question from \"./Question\";\n\nconst Dashboard = ({questions, questionsIds, authedUser, users}) => {\n  console.log(\"========> \" , questions)\n  console.log(\"========> \" , users)\n  // const voteOptioneOne = questions[questionsIds].optionOne.votes.includes(authedUser)\n  // const voteOptioneTwo = questions[questionsIds].optionTwo.votes.includes(authedUser)\n  // const hasVoted = voteOptioneOne || voteOptioneTwo;\n    //console.log(\"Dashboard props \", props)\n    return (\n      <div className=\"card-grid\">\n        <h3 className=\"center\">New Questions</h3>\n        <ul className=\"dashboard-list\">\n            {questionsIds.map((id) =>(\n                <li key={id}>\n                  <Question id={id}/>\n                </li>\n            ))}\n        </ul>\n      </div>\n    )\n}\n\nconst mapStateToProps = ({  users, questions, authedUser}) => ({\n\n    questionsIds: Object.keys(questions).sort(\n      (a, b) => questions[b].timestamp - questions[a].timestamp\n    ),\n    questions,\n    authedUser,\n    users,\n  \n  });\nexport default connect(mapStateToProps)(Dashboard);"],"mappings":";AAAA,SAASA,OAAO,QAAQ,aAAa;AACrC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,SAAS,GAAGA,CAAC;EAACC,SAAS;EAAEC,YAAY;EAAEC,UAAU;EAAEC;AAAK,CAAC,KAAK;EAClEC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAGL,SAAS,CAAC;EACrCI,OAAO,CAACC,GAAG,CAAC,YAAY,EAAGF,KAAK,CAAC;EACjC;EACA;EACA;EACE;EACA,oBACEL,OAAA;IAAKQ,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBT,OAAA;MAAIQ,SAAS,EAAC,QAAQ;MAAAC,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzCb,OAAA;MAAIQ,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EACzBN,YAAY,CAACW,GAAG,CAAEC,EAAE,iBACjBf,OAAA;QAAAS,QAAA,eACET,OAAA,CAACF,QAAQ;UAACiB,EAAE,EAAEA;QAAG;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC,GADZE,EAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEP,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEZ,CAAC;AAAAG,EAAA,GAnBKf,SAAS;AAqBf,MAAMgB,eAAe,GAAGA,CAAC;EAAGZ,KAAK;EAAEH,SAAS;EAAEE;AAAU,CAAC,MAAM;EAE3DD,YAAY,EAAEe,MAAM,CAACC,IAAI,CAACjB,SAAS,CAAC,CAACkB,IAAI,CACvC,CAACC,CAAC,EAAEC,CAAC,KAAKpB,SAAS,CAACoB,CAAC,CAAC,CAACC,SAAS,GAAGrB,SAAS,CAACmB,CAAC,CAAC,CAACE,SAClD,CAAC;EACDrB,SAAS;EACTE,UAAU;EACVC;AAEF,CAAC,CAAC;AACJ,eAAeR,OAAO,CAACoB,eAAe,CAAC,CAAChB,SAAS,CAAC;AAAC,IAAAe,EAAA;AAAAQ,YAAA,CAAAR,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}