{"ast":null,"code":"var _jsxFileName = \"/Users/yamilperez/Documents/React-NanoDegree/Employee-Polls/src/components/LeaderBoard.js\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LeaderBoard = props => {\n  console.log(\"LeaderBoard props \", props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Answer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Poll\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: props.questionsIds.map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: props.users[props.questions[row].author].avatarURL,\n              alt: `Avar of ${props.users[props.questions[row].author].name}`,\n              className: \"avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 25\n            }, this), \" \", props.users[props.questions[row].author].name, \"  (\", props.questions[row].author, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", props.questions[row].optionOne.votes.length + props.questions[row].optionTwo.votes.length, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", props.users[props.questions[row].author].questions.length, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 21\n          }, this)]\n        }, row, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n_c = LeaderBoard;\nconst mapStateToProps = ({\n  authedUser,\n  users,\n  questions\n}) => {\n  return {\n    authedUser,\n    users,\n    questions,\n    questionsIds: Object.keys(questions).sort((a, b) => questions[b].timestamp - questions[a].timestamp)\n  };\n};\nexport default connect(mapStateToProps)(LeaderBoard);\nvar _c;\n$RefreshReg$(_c, \"LeaderBoard\");","map":{"version":3,"names":["connect","jsxDEV","_jsxDEV","LeaderBoard","props","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","questionsIds","map","row","src","users","questions","author","avatarURL","alt","name","className","optionOne","votes","length","optionTwo","_c","mapStateToProps","authedUser","Object","keys","sort","a","b","timestamp","$RefreshReg$"],"sources":["/Users/yamilperez/Documents/React-NanoDegree/Employee-Polls/src/components/LeaderBoard.js"],"sourcesContent":["import { connect } from \"react-redux\"\n\n\n\n\nconst LeaderBoard = (props) => {\n    console.log(\"LeaderBoard props \", props)\n   \n\n      \n      return (\n        <div>\n            <table>\n            <thead>\n                <tr>\n                <th>Name</th>\n                <th>Answer</th>\n                <th>Poll</th>\n                </tr>\n            </thead>\n            <tbody>\n                {props.questionsIds.map(row => (\n                <tr key={row}>\n                    \n                    <td><img src={props.users[props.questions[row].author].avatarURL} alt={`Avar of ${props.users[props.questions[row].author].name}`} className=\"avatar\" /> {props.users[props.questions[row].author].name}  ({props.questions[row].author})</td>\n                    <td> {props.questions[row].optionOne.votes.length + props.questions[row].optionTwo.votes.length} </td>\n                    <td> {props.users[props.questions[row].author].questions.length} </td>\n                </tr>\n                ))}\n            </tbody>\n            </table>\n        </div>\n      );\n}\nconst mapStateToProps = ({authedUser, users, questions }) => {\n    \n\n    return {\n        authedUser,\n        users,\n        questions,\n        questionsIds: Object.keys(questions).sort(\n            (a, b) => questions[b].timestamp - questions[a].timestamp\n          ),\n       \n    }\n\n}\n\nexport default connect(mapStateToProps)(LeaderBoard)"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}