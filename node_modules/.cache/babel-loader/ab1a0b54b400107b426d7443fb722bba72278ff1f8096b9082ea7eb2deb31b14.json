{"ast":null,"code":"var _jsxFileName = \"/Users/yamilperez/Documents/React-NanoDegree/Employee-Polls/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport { useSelector } from \"react-redux\";\nimport Question from \"./Question\";\nimport NotFound from './404page';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  //console.log(\"Dashboard props \", questionsIds)\n  const authedUser = useSelector(state => state.authedUser);\n  const questions = useSelector(state => state.questions);\n  const questionsIds = Object.keys(questions).sort((a, b) => questions[b].timestamp - questions[a].timestamp);\n  const [showNewQuestions, setShowNewQuestions] = useState(true);\n  if (!questions) return /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 26\n  }, this);\n\n  // check if the id has answer the question\n  // return new array question ID that authedUser hasnt voted ye\n  const answeredQuestions = questionsIds.filter(id => {\n    const {\n      optionOne,\n      optionTwo\n    } = questions[id];\n    return optionOne.votes.includes(authedUser) || optionTwo.votes.includes(authedUser);\n  });\n  const unansweredQuestions = questionsIds.filter(id => !answeredQuestions.includes(id));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-grid\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"toggle-btn\",\n      onClick: () => setShowNewQuestions(!showNewQuestions),\n      children: showNewQuestions ? \"Show Done Questions\" : \"Show New Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), showNewQuestions ? /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"question-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"center\",\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Unanswered Polls\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"dashboard-list\",\n        children: unansweredQuestions.map(id => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Question, {\n            id: id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this)\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"question-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"center\",\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Answered Polls\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"dashboard-list\",\n        children: answeredQuestions.map(id => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Question, {\n            id: id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this)\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"DbjmNqvpyLjOdkC05stTEmZjHmA=\", false, function () {\n  return [useSelector, useSelector];\n});\n_c = Dashboard;\nexport default Dashboard;\n\n// const mapStateToProps = ({ questions, authedUser}) => ({\n\n//     questionsIds: Object.keys(questions).sort(\n//       (a, b) => questions[b].timestamp - questions[a].timestamp\n//     ),\n//     questions,\n//     authedUser,\n\n// });\n// export default connect(mapStateToProps)(Dashboard);\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useSelector","Question","NotFound","useState","jsxDEV","_jsxDEV","Dashboard","_s","authedUser","state","questions","questionsIds","Object","keys","sort","a","b","timestamp","showNewQuestions","setShowNewQuestions","fileName","_jsxFileName","lineNumber","columnNumber","answeredQuestions","filter","id","optionOne","optionTwo","votes","includes","unansweredQuestions","className","children","onClick","map","_c","$RefreshReg$"],"sources":["/Users/yamilperez/Documents/React-NanoDegree/Employee-Polls/src/components/Dashboard.js"],"sourcesContent":["import { useSelector } from \"react-redux\";\nimport Question from \"./Question\";\nimport NotFound from './404page'\nimport { useState } from \"react\";\n\nconst Dashboard = () => {\n  //console.log(\"Dashboard props \", questionsIds)\n  const authedUser = useSelector((state) => state.authedUser)\n  const questions  = useSelector((state) => state.questions);\n  const questionsIds = Object.keys(questions).sort((a, b) => questions[b].timestamp - questions[a].timestamp)\n\n  const [showNewQuestions, setShowNewQuestions] = useState(true);\n\n  if (!questions) return <NotFound />;\n\n  // check if the id has answer the question\n  // return new array question ID that authedUser hasnt voted ye\n  const answeredQuestions = questionsIds.filter((id) => {\n    const { optionOne, optionTwo } = questions[id];\n    return optionOne.votes.includes(authedUser) || optionTwo.votes.includes(authedUser);\n  });\n  const unansweredQuestions = questionsIds.filter((id) => !answeredQuestions.includes(id));\n  return (\n    <div className=\"card-grid\">\n      <button className=\"toggle-btn\" onClick={() => setShowNewQuestions(!showNewQuestions)}>\n        {showNewQuestions ? \"Show Done Questions\" : \"Show New Questions\"}\n      </button>\n  \n      {showNewQuestions ? (\n        <section className=\"question-section\">\n          <h3 className=\"center\"><strong>Unanswered Polls</strong></h3>\n          <ul className=\"dashboard-list\">\n            {unansweredQuestions.map((id) => (\n              <li key={id}>\n                <Question id={id} />\n              </li>\n            ))}\n          </ul>\n        </section>\n      ) : (\n        <section className=\"question-section\">\n          <h3 className=\"center\"><strong>Answered Polls</strong></h3>\n          <ul className=\"dashboard-list\">\n            {answeredQuestions.map((id) => (\n              <li key={id}>\n                <Question id={id} />\n              </li>\n            ))}\n          </ul>\n        </section>\n      )}\n    </div>\n  );\n}\n  export default Dashboard;\n  \n\n// const mapStateToProps = ({ questions, authedUser}) => ({\n\n//     questionsIds: Object.keys(questions).sort(\n//       (a, b) => questions[b].timestamp - questions[a].timestamp\n//     ),\n//     questions,\n//     authedUser,\n  \n// });\n// export default connect(mapStateToProps)(Dashboard);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}