{"ast":null,"code":"var _jsxFileName = \"/Users/yamilperez/Documents/React-NanoDegree/Employee-Polls/src/components/PollAnswer.js\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PollAnswer = props => {\n  const {\n    id,\n    name,\n    avatar\n  } = props.question;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" Poll by `$\", name, \"` \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: avatar,\n      alt: `Avar of ${name}`,\n      className: \"avatar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Would You Rather \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"This is the first  question \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"show-bnt\",\n          children: \"Click\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"This is the first  question \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"show-bnt\",\n          children: \"Click\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_c = PollAnswer;\nconst mapStateToProps = ({\n  authedUser,\n  users,\n  questions\n}, {\n  id\n}) => {\n  const question = questions[id];\n  return {\n    authedUser,\n    question: question ? formatQuestion(question, users[question.author], authedUser) : null\n  };\n};\nexport default connect(mapStateToProps)(PollAnswer);\nvar _c;\n$RefreshReg$(_c, \"PollAnswer\");","map":{"version":3,"names":["connect","jsxDEV","_jsxDEV","PollAnswer","props","id","name","avatar","question","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","mapStateToProps","authedUser","users","questions","formatQuestion","author","$RefreshReg$"],"sources":["/Users/yamilperez/Documents/React-NanoDegree/Employee-Polls/src/components/PollAnswer.js"],"sourcesContent":["import { connect } from \"react-redux\"\n\n\nconst PollAnswer = (props) => {\n  const {id, name, avatar, } = props.question\n\n  return (\n    <div className=\"question\">\n      <h1> Poll by `${name}` </h1>\n      <img src={avatar} alt={`Avar of ${name}`} className=\"avatar\" />\n      <div className=\"question-info\">\n        <h1>Would You Rather </h1>\n          <div>\n            <h3>This is the first  question </h3>\n          <button className=\"show-bnt\">Click</button>   \n          </div>\n          <div>\n            <h3>This is the first  question </h3>\n          <button className=\"show-bnt\">Click</button>   \n          </div>\n      </div>\n</div>\n  )\n}\n\n\nconst mapStateToProps = ({authedUser, users, questions }, {id}) => {\n  const question = questions[id];\n\n  return{\n      authedUser,\n      question: question \n      ? formatQuestion(question, users[question.author], authedUser) \n      : null\n  }\n\n}\n\nexport default connect(mapStateToProps)(PollAnswer)"],"mappings":";AAAA,SAASA,OAAO,QAAQ,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGrC,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAC5B,MAAM;IAACC,EAAE;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGH,KAAK,CAACI,QAAQ;EAE3C,oBACEN,OAAA;IAAKO,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBR,OAAA;MAAAQ,QAAA,GAAI,aAAW,EAACJ,IAAI,EAAC,IAAE;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BZ,OAAA;MAAKa,GAAG,EAAER,MAAO;MAACS,GAAG,EAAE,WAAWV,IAAI,EAAG;MAACG,SAAS,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/DZ,OAAA;MAAKO,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BR,OAAA;QAAAQ,QAAA,EAAI;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBZ,OAAA;QAAAQ,QAAA,gBACER,OAAA;UAAAQ,QAAA,EAAI;QAA4B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvCZ,OAAA;UAAQO,SAAS,EAAC,UAAU;UAAAC,QAAA,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC,eACNZ,OAAA;QAAAQ,QAAA,gBACER,OAAA;UAAAQ,QAAA,EAAI;QAA4B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvCZ,OAAA;UAAQO,SAAS,EAAC,UAAU;UAAAC,QAAA,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEN,CAAC;AAAAG,EAAA,GApBKd,UAAU;AAuBhB,MAAMe,eAAe,GAAGA,CAAC;EAACC,UAAU;EAAEC,KAAK;EAAEC;AAAU,CAAC,EAAE;EAAChB;AAAE,CAAC,KAAK;EACjE,MAAMG,QAAQ,GAAGa,SAAS,CAAChB,EAAE,CAAC;EAE9B,OAAM;IACFc,UAAU;IACVX,QAAQ,EAAEA,QAAQ,GAChBc,cAAc,CAACd,QAAQ,EAAEY,KAAK,CAACZ,QAAQ,CAACe,MAAM,CAAC,EAAEJ,UAAU,CAAC,GAC5D;EACN,CAAC;AAEH,CAAC;AAED,eAAenB,OAAO,CAACkB,eAAe,CAAC,CAACf,UAAU,CAAC;AAAA,IAAAc,EAAA;AAAAO,YAAA,CAAAP,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}