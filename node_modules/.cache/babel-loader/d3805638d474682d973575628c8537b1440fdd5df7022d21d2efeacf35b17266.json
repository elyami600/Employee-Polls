{"ast":null,"code":"var _jsxFileName = \"/Users/yamilperez/Documents/React-NanoDegree/Employee-Polls/src/components/LeaderBoard.js\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LeaderBoard = ({\n  users\n}) => {\n  console.log(\"LeaderBoard props \", users);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"customers\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"center\",\n      children: \"Leaderboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Answer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Poll\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: uniqueArray.map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: props.users[props.questions[row].author].avatarURL,\n              alt: `Avar of ${props.users[props.questions[row].author].name}`,\n              className: \"avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 25\n            }, this), \" \", props.users[props.questions[row].author].name, \"  (\", props.questions[row].author, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", props.questions[row].optionOne.votes.length + props.questions[row].optionTwo.votes.length, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", props.users[props.questions[row].author].questions.length, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 21\n          }, this)]\n        }, row, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n_c = LeaderBoard;\nconst mapStateToProps = ({\n  users\n}) => {\n  return {\n    users\n  };\n};\nexport default connect(mapStateToProps)(LeaderBoard);\nvar _c;\n$RefreshReg$(_c, \"LeaderBoard\");","map":{"version":3,"names":["connect","jsxDEV","_jsxDEV","LeaderBoard","users","console","log","id","children","className","fileName","_jsxFileName","lineNumber","columnNumber","uniqueArray","map","row","src","props","questions","author","avatarURL","alt","name","optionOne","votes","length","optionTwo","_c","mapStateToProps","$RefreshReg$"],"sources":["/Users/yamilperez/Documents/React-NanoDegree/Employee-Polls/src/components/LeaderBoard.js"],"sourcesContent":["import { connect } from \"react-redux\"\n\n\n\n\nconst LeaderBoard = ({ users }) => {\n    console.log(\"LeaderBoard props \", users)\n    \n   \n      return (\n        <div id=\"customers\">\n            <h3 className=\"center\">Leaderboard</h3>\n            <table>\n            <thead>\n                <tr>\n                <th>Name</th>\n                <th>Answer</th>\n                <th>Poll</th>\n                </tr>\n            </thead>\n            <tbody>\n                {uniqueArray.map(row => (\n                <tr key={row}>\n                    \n                    <td><img src={props.users[props.questions[row].author].avatarURL} alt={`Avar of ${props.users[props.questions[row].author].name}`} className=\"avatar\" /> {props.users[props.questions[row].author].name}  ({props.questions[row].author})</td>\n                    <td> {props.questions[row].optionOne.votes.length + props.questions[row].optionTwo.votes.length} </td>\n                    <td> {props.users[props.questions[row].author].questions.length} </td>\n                </tr>\n                ))}\n            </tbody>\n            </table>\n        </div>\n      );\n}\nconst mapStateToProps = ({ users }) => {\n\n    return {\n        users,\n    }\n}\n\nexport default connect(mapStateToProps)(LeaderBoard)"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}