{"ast":null,"code":"import { saveQuestion, saveQuestionAnswer } from \"../utils/api\";\n//import { addAnswerUser } from \"./users\";\n\nexport const RECEIVE_QUESTIONS = \"RECEIVE_QUESTIONS\";\nexport const ADD_QUESTION = \"ADD_QUESTION\";\nexport const ADD_QUESTION_ANSWER = \"ADD_QUESTION_ANSWER\";\nexport function receiveQuestions(questions) {\n  return {\n    type: RECEIVE_QUESTIONS,\n    questions\n  };\n}\n// add question\nexport function addQuestion({\n  id,\n  authedUser,\n  answer\n}) {\n  return {\n    type: ADD_QUESTION,\n    id,\n    authedUser,\n    answer\n  };\n}\nexport function handleAddQuestion(optionOne, optionTwo) {\n  return (dispatch, getState) => {\n    const {\n      authedUser\n    } = getState();\n    const question = {\n      optionOne,\n      optionTwo,\n      authedUser\n    };\n    dispatch(addQuestion(question));\n    return saveQuestion(question).catch(e => {\n      console.warn(\"Error in handleAddQuestion\", e);\n      dispatch(addQuestion(question));\n      alert('There was an error saving the guestion. Try againg');\n    });\n  };\n}\n// -------------------save the answe fun -------------------------//\nexport function addQuestionAnswer({\n  authedUser,\n  qid,\n  answer\n}) {\n  return {\n    type: ADD_QUESTION_ANSWER,\n    authedUser,\n    qid,\n    answer\n  };\n}\nexport function handleAddQuestionAnswer({\n  qid,\n  answer\n}) {\n  return async (dispatch, getState) => {\n    const {\n      authUser\n    } = getState();\n    const answerObject = {\n      authUser,\n      qid,\n      answer\n    };\n    const isAdded = await saveQuestionAnswer(answerObject);\n    if (isAdded) {\n      dispatch(addQuestionAnswer(qid, authUser, answer));\n      // dispatch(addUserAnswer(authUser.id, questionId, answer));\n    }\n  };\n}","map":{"version":3,"names":["saveQuestion","saveQuestionAnswer","RECEIVE_QUESTIONS","ADD_QUESTION","ADD_QUESTION_ANSWER","receiveQuestions","questions","type","addQuestion","id","authedUser","answer","handleAddQuestion","optionOne","optionTwo","dispatch","getState","question","catch","e","console","warn","alert","addQuestionAnswer","qid","handleAddQuestionAnswer","authUser","answerObject","isAdded"],"sources":["/Users/yamilperez/Documents/React-NanoDegree/Employee-Polls/src/actions/questions.js"],"sourcesContent":["import { saveQuestion , saveQuestionAnswer } from \"../utils/api\";\n//import { addAnswerUser } from \"./users\";\n\n\nexport const RECEIVE_QUESTIONS = \"RECEIVE_QUESTIONS\"\nexport const ADD_QUESTION      = \"ADD_QUESTION\"\nexport const ADD_QUESTION_ANSWER = \"ADD_QUESTION_ANSWER\"\n\n\nexport function receiveQuestions(questions) {\n    return {\n      type: RECEIVE_QUESTIONS,\n      questions,\n    };\n  }\n// add question\n  export function addQuestion({ id, authedUser, answer }) {\n    return {\n      type: ADD_QUESTION,\n      id,\n      authedUser,\n      answer\n    }\n\n  }\n\n  export function handleAddQuestion(optionOne, optionTwo) {\n    return (dispatch, getState) => {\n      const { authedUser } = getState();\n      const question = { optionOne, optionTwo, authedUser }\n      dispatch(addQuestion(question));\n    \n      return saveQuestion(question).catch((e) => {\n        console.warn(\"Error in handleAddQuestion\" ,e);\n        dispatch(addQuestion(question));\n        alert('There was an error saving the guestion. Try againg')\n      })\n\n    }\n\n  }\n// -------------------save the answe fun -------------------------//\n  export function addQuestionAnswer({ authedUser, qid, answer }) {\n    return {\n      type: ADD_QUESTION_ANSWER,\n      authedUser,\n       qid, \n       answer\n    }\n  }\n\n  export function handleAddQuestionAnswer({ qid, answer }){\n    return async (dispatch, getState) => {\n      const { authUser } = getState();\n      const answerObject = {\n        authUser , qid,\n        answer,\n      };\n      const isAdded = await saveQuestionAnswer(answerObject);\n      if(isAdded) {\n        dispatch(addQuestionAnswer(qid, authUser, answer));\n       // dispatch(addUserAnswer(authUser.id, questionId, answer));\n      }\n    };\n  }"],"mappings":"AAAA,SAASA,YAAY,EAAGC,kBAAkB,QAAQ,cAAc;AAChE;;AAGA,OAAO,MAAMC,iBAAiB,GAAG,mBAAmB;AACpD,OAAO,MAAMC,YAAY,GAAQ,cAAc;AAC/C,OAAO,MAAMC,mBAAmB,GAAG,qBAAqB;AAGxD,OAAO,SAASC,gBAAgBA,CAACC,SAAS,EAAE;EACxC,OAAO;IACLC,IAAI,EAAEL,iBAAiB;IACvBI;EACF,CAAC;AACH;AACF;AACE,OAAO,SAASE,WAAWA,CAAC;EAAEC,EAAE;EAAEC,UAAU;EAAEC;AAAO,CAAC,EAAE;EACtD,OAAO;IACLJ,IAAI,EAAEJ,YAAY;IAClBM,EAAE;IACFC,UAAU;IACVC;EACF,CAAC;AAEH;AAEA,OAAO,SAASC,iBAAiBA,CAACC,SAAS,EAAEC,SAAS,EAAE;EACtD,OAAO,CAACC,QAAQ,EAAEC,QAAQ,KAAK;IAC7B,MAAM;MAAEN;IAAW,CAAC,GAAGM,QAAQ,CAAC,CAAC;IACjC,MAAMC,QAAQ,GAAG;MAAEJ,SAAS;MAAEC,SAAS;MAAEJ;IAAW,CAAC;IACrDK,QAAQ,CAACP,WAAW,CAACS,QAAQ,CAAC,CAAC;IAE/B,OAAOjB,YAAY,CAACiB,QAAQ,CAAC,CAACC,KAAK,CAAEC,CAAC,IAAK;MACzCC,OAAO,CAACC,IAAI,CAAC,4BAA4B,EAAEF,CAAC,CAAC;MAC7CJ,QAAQ,CAACP,WAAW,CAACS,QAAQ,CAAC,CAAC;MAC/BK,KAAK,CAAC,oDAAoD,CAAC;IAC7D,CAAC,CAAC;EAEJ,CAAC;AAEH;AACF;AACE,OAAO,SAASC,iBAAiBA,CAAC;EAAEb,UAAU;EAAEc,GAAG;EAAEb;AAAO,CAAC,EAAE;EAC7D,OAAO;IACLJ,IAAI,EAAEH,mBAAmB;IACzBM,UAAU;IACTc,GAAG;IACHb;EACH,CAAC;AACH;AAEA,OAAO,SAASc,uBAAuBA,CAAC;EAAED,GAAG;EAAEb;AAAO,CAAC,EAAC;EACtD,OAAO,OAAOI,QAAQ,EAAEC,QAAQ,KAAK;IACnC,MAAM;MAAEU;IAAS,CAAC,GAAGV,QAAQ,CAAC,CAAC;IAC/B,MAAMW,YAAY,GAAG;MACnBD,QAAQ;MAAGF,GAAG;MACdb;IACF,CAAC;IACD,MAAMiB,OAAO,GAAG,MAAM3B,kBAAkB,CAAC0B,YAAY,CAAC;IACtD,IAAGC,OAAO,EAAE;MACVb,QAAQ,CAACQ,iBAAiB,CAACC,GAAG,EAAEE,QAAQ,EAAEf,MAAM,CAAC,CAAC;MACnD;IACD;EACF,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}