{"ast":null,"code":"var _jsxFileName = \"/Users/yamilperez/Documents/React-NanoDegree/Employee-Polls/src/components/PollAnswer.js\";\nimport { connect } from \"react-redux\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { handleAddQuestionAnswer } from \"../actions/questions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst withRouter = Component => {\n  var _s = $RefreshSig$();\n  const ComponentWithRouterProp = props => {\n    _s();\n    let location = useLocation();\n    let navigate = useNavigate();\n    let params = useParams();\n    return /*#__PURE__*/_jsxDEV(Component, {\n      ...props,\n      router: {\n        location,\n        navigate,\n        params\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 14\n    }, this);\n  };\n  _s(ComponentWithRouterProp, \"G4H0N746j5KwtpeOKQjfXhEbWfg=\", false, function () {\n    return [useLocation, useNavigate, useParams];\n  });\n  return ComponentWithRouterProp;\n};\nconst PollAnswer = props => {\n  console.log(\"Poll answer \", props);\n  const {\n    dispatch,\n    id,\n    users,\n    authedUser,\n    questions\n  } = props;\n  const question = questions[id];\n  const avatar = users[question.author].avatarURL;\n  const name = users[question.author].name;\n  const voteOptioneOne = questions[id].optionOne.votes.includes(authedUser);\n  const voteOptioneTwo = questions[id].optionTwo.votes.includes(authedUser);\n  const hasVoted = voteOptioneOne || voteOptioneTwo;\n  const optionOneVotes = questions[id].optionOne.votes.length;\n  const optionTwoVotes = questions[id].optionTwo.votes.length;\n  const total = optionOneVotes + optionTwoVotes;\n  const optionOnePercent = Math.round(100 * (optionOneVotes / total));\n  const optionTwoPercent = Math.round(100 * (optionTwoVotes / total));\n\n  // const percentage = (questions[id].votes.length/ total) * 100;\n  // const value = Math.floor(Math.random() * 100);\n\n  const handleOptioneOne = e => {\n    e.preventDefault();\n    dispatch(handleAddQuestionAnswer(id, \"optionOne\"));\n  };\n  const handleOptioneTwo = e => {\n    e.preventDefault();\n    dispatch(handleAddQuestionAnswer(id, \"optionTwo\"));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" Poll by \", name, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: avatar,\n      alt: `Avar of ${name}`,\n      className: \"avatar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: !hasVoted ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Would You Rather \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [question.optionOne.text, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleOptioneOne,\n            children: \"Click\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [question.optionTwo.text, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleOptioneTwo,\n            children: \"Click\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar-completed\",\n            style: {\n              width: `${optionOnePercent}%`\n            },\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              id: \"progress-bar-label\",\n              className: \"visually-hidden\",\n              children: [\"Progress: \", optionOnePercent, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar-completed\",\n            style: {\n              width: `${optionTwoPercent}%`\n            },\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              id: \"progress-bar-label\",\n              className: \"visually-hidden\",\n              children: [\"Progress: \", optionTwoPercent, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"You Already Voted\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_c = PollAnswer;\nconst mapStateToProps = ({\n  authedUser,\n  users,\n  questions\n}, props) => {\n  const {\n    id\n  } = props.router.params;\n  return {\n    id,\n    users,\n    questions,\n    authedUser\n  };\n};\nexport default withRouter(connect(mapStateToProps)(PollAnswer));\nvar _c;\n$RefreshReg$(_c, \"PollAnswer\");","map":{"version":3,"names":["connect","useLocation","useNavigate","useParams","handleAddQuestionAnswer","jsxDEV","_jsxDEV","withRouter","Component","_s","$RefreshSig$","ComponentWithRouterProp","props","location","navigate","params","router","fileName","_jsxFileName","lineNumber","columnNumber","PollAnswer","console","log","dispatch","id","users","authedUser","questions","question","avatar","author","avatarURL","name","voteOptioneOne","optionOne","votes","includes","voteOptioneTwo","optionTwo","hasVoted","optionOneVotes","length","optionTwoVotes","total","optionOnePercent","Math","round","optionTwoPercent","handleOptioneOne","e","preventDefault","handleOptioneTwo","className","children","src","alt","text","onClick","style","width","_c","mapStateToProps","$RefreshReg$"],"sources":["/Users/yamilperez/Documents/React-NanoDegree/Employee-Polls/src/components/PollAnswer.js"],"sourcesContent":["\nimport { connect } from \"react-redux\"\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { handleAddQuestionAnswer } from \"../actions/questions\";\n\n\nconst withRouter = (Component) => {\n    const ComponentWithRouterProp = (props) => {\n      let location = useLocation();\n      let navigate = useNavigate();\n      let params = useParams();\n      return <Component {...props} router={{ location, navigate, params }} />;\n    };\n  \n    return ComponentWithRouterProp;\n  };\n\n\nconst PollAnswer = (props) => {\n  console.log(\"Poll answer \", props)\n\n  const { dispatch, id, users,authedUser, questions } = props;\n  const question = questions[id];\n  const avatar   = users[question.author].avatarURL\n  const name     = users[question.author].name\n\n  const voteOptioneOne = questions[id].optionOne.votes.includes(authedUser)\n  const voteOptioneTwo = questions[id].optionTwo.votes.includes(authedUser)\n  const hasVoted = voteOptioneOne || voteOptioneTwo;\n\n  const optionOneVotes = questions[id].optionOne.votes.length;\n  const optionTwoVotes = questions[id].optionTwo.votes.length;\n\n  const total = optionOneVotes + optionTwoVotes;\n  const optionOnePercent = Math.round(100 * (optionOneVotes / total));\n  const optionTwoPercent = Math.round(100 * (optionTwoVotes / total));\n  \n  // const percentage = (questions[id].votes.length/ total) * 100;\n  // const value = Math.floor(Math.random() * 100);\n\n\n  const handleOptioneOne = (e) => {\n    e.preventDefault()\n    dispatch(handleAddQuestionAnswer(id, \"optionOne\"));\n  }\n\n  const handleOptioneTwo = (e) => {\n    e.preventDefault()\n    dispatch(handleAddQuestionAnswer(id, \"optionTwo\"))\n  }\n\n  return (\n    <div className=\"center\">\n      <h1> Poll by {name} </h1>\n      <img src={avatar} alt={`Avar of ${name}`} className=\"avatar\" />\n      <div>\n        {!hasVoted ? (\n          <div>\n            <h1>Would You Rather </h1>\n          <div>\n            <h3>{question.optionOne.text} </h3>\n            <button onClick={handleOptioneOne}>Click</button>   \n          </div>\n          <div>\n            <h3>{question.optionTwo.text} </h3>\n            <button onClick={handleOptioneTwo}>Click</button>   \n          </div>\n\n          </div> \n        ) : (\n          <div>\n            <div className=\"progress-bar\">\n              <div className=\"progress-bar-completed\" style={{ width: `${optionOnePercent}%` }}>\n              <span id=\"progress-bar-label\" className=\"visually-hidden\">Progress: {optionOnePercent}%</span>\n              </div>\n            </div>\n            <div className=\"progress-bar\">\n              <div className=\"progress-bar-completed\" style={{ width: `${optionTwoPercent}%` }}>\n              <span id=\"progress-bar-label\" className=\"visually-hidden\">Progress: {optionTwoPercent}%</span>\n              </div>\n            </div>\n           \n          <h1>You Already Voted</h1>\n          </div>\n\n          \n        )}\n        \n      </div>\n</div>\n  )\n}\n\nconst mapStateToProps = ({ authedUser, users, questions,}, props) => {\n  const { id }= props.router.params;\n \n  return {\n    id,\n    users,\n    questions,\n    authedUser\n  }\n}\n\nexport default withRouter(connect(mapStateToProps)(PollAnswer))"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}