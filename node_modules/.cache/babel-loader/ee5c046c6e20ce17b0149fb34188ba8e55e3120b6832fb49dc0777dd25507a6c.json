{"ast":null,"code":"var _jsxFileName = \"/Users/yamilperez/Documents/React-NanoDegree/Employee-Polls/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setAuthedUser } from \"../actions/authedUser\";\nimport { Navigate, useNavigate, useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = ({\n  dispatch,\n  users,\n  loggedIn\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    state\n  } = useLocation();\n  const [error, setError] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [isOpen, setIsOpen] = useState(false);\n\n  // Redirect if logged in\n  if (loggedIn) {\n    const params = new URLSearchParams(window.location.search);\n    const redirectURL = params.get('redirectTo');\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: redirectURL || \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 16\n    }, this);\n  }\n  // if (loggedIn) {\n  //     const lastVisitedURL = localStorage.getItem('lastVisitedURL');\n  //     return <Navigate to={lastVisitedURL || \"/\"} />;\n  // }\n\n  // Single handler for both inputs\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === \"username\") setUsername(value);else if (name === \"password\") setPassword(value);\n  };\n  // handler the submit  for both inputs\n  // ckeck if the user exits\n  const handleSubmit = e => {\n    e.preventDefault();\n    const userExists = users.find(user => user.id === username && user.password === password);\n    if (userExists) {\n      dispatch(setAuthedUser(username));\n      navigate((state === null || state === void 0 ? void 0 : state.path) || \"/\");\n      // const redirectTo = state?.path || localStorage.getItem('lastVisitedURL') || \"/\";\n      // navigate(redirectTo);\n      //localStorage.removeItem('lastVisitedURL');\n    } else {\n      setError(true);\n      setUsername(\"\");\n      setPassword(\"\");\n    }\n  };\n  const toggleDropdown = () => {\n    setIsOpen(!isOpen);\n  };\n  const handleUserSelect = user => {\n    setUsername(user.id);\n    setPassword(user.password);\n    setIsOpen(false);\n    setError(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"center\",\n      \"data-testid\": \"error-header\",\n      children: \"Error: Invalid username or password.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"center\",\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"existUser-btn\",\n      onClick: toggleDropdown,\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Existing User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"center\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          \"data-testid\": \"username-input\",\n          type: \"text\",\n          placeholder: \"username...\",\n          name: \"username\",\n          value: username,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          \"data-testid\": \"password-input\",\n          type: \"password\",\n          placeholder: \"password...\",\n          name: \"password\",\n          value: password,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this), isOpen && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"center user-dropdown\",\n        children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleUserSelect(user),\n          children: user.name\n        }, user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        \"data-testid\": \"submit-button\",\n        className: \"btn\",\n        type: \"submit\",\n        disabled: !username || !password,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginPage, \"2BSxT5v3dhF4HRZVBqd7hwWYzMI=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = LoginPage;\nconst mapStateToProps = ({\n  users,\n  authedUser\n}) => ({\n  users: Object.values(users),\n  loggedIn: !!authedUser\n});\nexport default connect(mapStateToProps)(LoginPage);\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["useState","connect","setAuthedUser","Navigate","useNavigate","useLocation","jsxDEV","_jsxDEV","LoginPage","dispatch","users","loggedIn","_s","navigate","state","error","setError","username","setUsername","password","setPassword","isOpen","setIsOpen","params","URLSearchParams","window","location","search","redirectURL","get","to","fileName","_jsxFileName","lineNumber","columnNumber","handleInputChange","e","name","value","target","handleSubmit","preventDefault","userExists","find","user","id","path","toggleDropdown","handleUserSelect","className","children","onClick","onSubmit","type","placeholder","onChange","map","disabled","_c","mapStateToProps","authedUser","Object","values","$RefreshReg$"],"sources":["/Users/yamilperez/Documents/React-NanoDegree/Employee-Polls/src/components/Login.js"],"sourcesContent":["import { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setAuthedUser } from \"../actions/authedUser\";\nimport { Navigate, useNavigate, useLocation } from \"react-router-dom\";\n\n\n\n\nconst LoginPage = ({ dispatch, users, loggedIn }) => {\n    const navigate = useNavigate();\n    const { state } = useLocation();\n\n    const [error, setError] = useState(false);\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [isOpen, setIsOpen] = useState(false);\n    \n    \n\n    // Redirect if logged in\n    if (loggedIn) {\n        const params = new URLSearchParams(window.location.search);\n        const redirectURL = params.get('redirectTo');\n        return <Navigate to={redirectURL || \"/\"} />;\n    }\n    // if (loggedIn) {\n    //     const lastVisitedURL = localStorage.getItem('lastVisitedURL');\n    //     return <Navigate to={lastVisitedURL || \"/\"} />;\n    // }\n\n\n    // Single handler for both inputs\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        if (name === \"username\") setUsername(value);\n        else if (name === \"password\") setPassword(value);\n    };\n   // handler the submit  for both inputs\n   // ckeck if the user exits\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const userExists = users.find(\n            (user) => user.id === username && user.password === password\n        );\n\n        if (userExists) {\n            dispatch(setAuthedUser(username));\n             navigate(state?.path || \"/\");\n            // const redirectTo = state?.path || localStorage.getItem('lastVisitedURL') || \"/\";\n            // navigate(redirectTo);\n            //localStorage.removeItem('lastVisitedURL');\n        } else {\n            setError(true);\n            setUsername(\"\");\n            setPassword(\"\");\n        }\n    };\n\n    const toggleDropdown = () => {\n        setIsOpen(!isOpen);\n      };\n\n      \n      const handleUserSelect = (user) => {\n        setUsername(user.id);\n        setPassword(user.password);\n        setIsOpen(false); \n        setError(false); \n    };\n    \n\n    return (\n        <div className=\"container\">\n          {/* Error Message */}\n          {error && (\n            <h1 className=\"center\" data-testid=\"error-header\">\n              Error: Invalid username or password.\n            </h1>\n          )}\n      \n          {/* Login Title */}\n          <h1 className=\"center\">Log In</h1>\n      \n          {/* Existing User Dropdown Button */}\n          <button className=\"existUser-btn\" onClick={toggleDropdown}>\n            <strong>Existing User</strong>\n          </button>\n      \n          {/* Login Form */}\n          <form className=\"center\" onSubmit={handleSubmit}>\n            {/* Username Input */}\n            <div className=\"form-group\">\n              <label>Username:</label>\n              <input\n                data-testid=\"username-input\"\n                type=\"text\"\n                placeholder=\"username...\"\n                name=\"username\"\n                value={username}\n                onChange={handleInputChange}\n              />\n            </div>\n      \n            {/* Password Input */}\n            <div className=\"form-group\">\n              <label>Password:</label>\n              <input\n                data-testid=\"password-input\"\n                type=\"password\"\n                placeholder=\"password...\"\n                name=\"password\"\n                value={password}\n                onChange={handleInputChange}\n              />\n            </div>\n      \n            {/* User Dropdown List */}\n            {isOpen && (\n              <ul className=\"center user-dropdown\">\n                {users.map((user) => (\n                  <li key={user.id} onClick={() => handleUserSelect(user)}>\n                    {user.name}\n                  </li>\n                ))}\n              </ul>\n            )}\n      \n            {/* Submit Button */}\n            <button\n              data-testid=\"submit-button\"\n              className=\"btn\"\n              type=\"submit\"\n              disabled={!username || !password}\n            >\n              Submit\n            </button>\n          </form>\n        </div>\n    );\n}      \n\nconst mapStateToProps = ({ users, authedUser }) => ({\n    users: Object.values(users),\n    loggedIn: !!authedUser,\n});\n\nexport default connect(mapStateToProps)(LoginPage);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}